import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.URI;
import java.net.http.HttpClient;
import java.net.http.HttpRequest;
import java.net.http.HttpResponse;
import java.util.ArrayList;
import java.util.List;

public class ChatbotFrontend {
    private static final String CHATBOT_API_URL = "https://your-chatbot-api-url.com/chat";
    private static final HttpClient httpClient = HttpClient.newHttpClient();
    private static final List<String> chatHistory = new ArrayList<>();

    public static void main(String[] args) throws IOException, InterruptedException {
        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
        String userInput;

        System.out.println("Welcome to the Chatbot! Type 'exit' to end the conversation.");

        while (true) {
            System.out.print("User: ");
            userInput = reader.readLine();

            if ("exit".equalsIgnoreCase(userInput.trim())) {
                System.out.println("Goodbye!");
                break;
            }

            chatHistory.add("User: " + userInput);
            String chatbotResponse = getChatbotResponse(userInput);
            System.out.println("Chatbot: " + chatbotResponse);
            chatHistory.add("Chatbot: " + chatbotResponse);
        }
    }

    private static String getChatbotResponse(String userMessage) throws IOException, InterruptedException {
        String requestBody = createRequestBody(userMessage);

        HttpRequest request = HttpRequest.newBuilder()
                .uri(URI.create(CHATBOT_API_URL))
                .header("Content-Type", "application/json")
                .POST(HttpRequest.BodyPublishers.ofString(requestBody))
                .build();

        HttpResponse<String> response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());

        if (response.statusCode() == 200) {
            return response.body();
        } else {
            return "Sorry, I couldn't process your request. Please try again.";
        }
    }

    private static String createRequestBody(String userMessage) {
        StringBuilder sb = new StringBuilder();
        sb.append("{\"message\": \"").append(escapeJson(userMessage)).append("\", ");
        sb.append("\"history\": [");
        for (int i = 0; i < chatHistory.size(); i++) {
            if (i > 0) sb.append(", ");
            sb.append("\"").append(escapeJson(chatHistory.get(i))).append("\"");
        }
        sb.append("]}");
        return sb.toString();
    }

    private static String escapeJson(String input) {
        return input.replace("\\", "\\\\")
                    .replace("\"", "\\\"")
                    .replace("\b", "\\b")
                    .replace("\f", "\\f")
                    .replace("\n", "\\n")
                    .replace("\r", "\\r")
                    .replace("\t", "\\t");
    }
}
